name: Code Quality Checks

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]

env:
  APP_ENV: testing
  APP_KEY: base64:test-key-for-ci
  DB_CONNECTION: sqlite
  DB_DATABASE: database/database.sqlite
  CACHE_STORE: array
  QUEUE_CONNECTION: sync
  SESSION_DRIVER: array
  MAIL_MAILER: array
  TELESCOPE_ENABLED: false
  PULSE_ENABLED: false

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, mysql, sqlite, redis, bcmath, gd, zip, curl, xml, intl, json, pdo_sqlite
          coverage: xdebug
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

      - name: Copy environment file
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Create SQLite database
        run: touch database/database.sqlite

      - name: Run database migrations
        run: php artisan migrate --force

      - name: Run database seeders
        run: php artisan db:seed --force

      - name: Run tests with coverage
        run: |
          if php -m | grep -q xdebug; then
            composer test
          else
            php vendor/bin/phpunit --configuration=phpunit-ci.xml
          fi

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt
          flags: api
          name: api-coverage
          fail_ci_if_error: false

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, mysql, sqlite, redis, bcmath, gd, zip, curl, xml, intl, json, pdo_sqlite
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

      - name: Run Laravel Pint (Code Style)
        run: php vendor/bin/pint --test

      - name: Run PHPStan (Static Analysis)
        run: composer analyse

      - name: Generate IDE helpers
        run: composer ide-helpers

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

      - name: Run security audit
        run: |
          composer audit || {
            echo "Security audit completed with warnings"
            exit 0
          }

